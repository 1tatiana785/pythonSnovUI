{"name": "Load more", "status": "broken", "statusDetails": {"message": "TypeError: expected str, bytes or os.PathLike object, not property", "trace": "request = <SubRequest 'driver' for <Function test_upload_1error_file>>\n\n    @pytest.fixture(scope=\"function\", autouse=True)\n    def driver(request):\n        service = Service()\n        options = Options()\n        perfs = {\"download.defoult_directory\": f\"{os.getcwd()}/downloads\"}\n        options.add_argument(\"--headless\")\n        options.add_experimental_option(\"excludeSwitches\", ['enable-automation'])\n        options.add_experimental_option(\"useAutomationExtension\", False)\n        options.add_experimental_option(\"prefs\", perfs)\n        options.add_argument(\"--window-size=1920,1080\")\n        options.add_argument(\"--no-sandbox\")\n        options.add_argument(\"--disable-dev-shm-usage\")\n        options.add_argument(\"--ignore-certificate-errors\")\n        #service = Service(f\"{os.getcwd()}/chromedriver\")\n        #service.start()\n>       driver = webdriver.Chrome(service=Service, options=options)\n\nconftest.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n../local/lib/python3.12/site-packages/selenium/webdriver/chrome/webdriver.py:47: in __init__\n    self.service.path = DriverFinder.get_path(self.service, self.options)\n../local/lib/python3.12/site-packages/selenium/webdriver/common/driver_finder.py:40: in get_path\n    path = shutil.which(service.path)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncmd = <property object at 0x7873229484f0>, mode = 1, path = None\n\n    def which(cmd, mode=os.F_OK | os.X_OK, path=None):\n        \"\"\"Given a command, mode, and a PATH string, return the path which\n        conforms to the given mode on the PATH, or None if there is no such\n        file.\n    \n        `mode` defaults to os.F_OK | os.X_OK. `path` defaults to the result\n        of os.environ.get(\"PATH\"), or can be overridden with a custom search\n        path.\n    \n        \"\"\"\n        # If we're given a path with a directory part, look it up directly rather\n        # than referring to PATH directories. This includes checking relative to the\n        # current directory, e.g. ./script\n>       if os.path.dirname(cmd):\nE       TypeError: expected str, bytes or os.PathLike object, not property\n\n../local/lib/python3.12/shutil.py:1441: TypeError"}, "start": 1718832950298, "stop": 1718832950298, "uuid": "fce599ec-6e31-4d2f-aca2-2b6c7f61047f", "historyId": "b876855393093e4f206ee3077aea6915", "testCaseId": "b876855393093e4f206ee3077aea6915", "fullName": "tests.test_bev.TestBEV#test_upload_1error_file", "labels": [{"name": "feature", "value": "BEV Functionality"}, {"name": "severity", "value": "Critical"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_bev"}, {"name": "subSuite", "value": "TestBEV"}, {"name": "host", "value": "c22506624fdb"}, {"name": "thread", "value": "1-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_bev"}]}